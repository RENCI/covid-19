{"version":3,"sources":["webpack:///./src/components/card/card.js","webpack:///./src/components/card/card-header.js","webpack:///./src/components/card/card-body.js","webpack:///./src/components/card/card-footer.js","webpack:///./src/components/card/title-card.js","webpack:///./src/pages/resources.js","webpack:///./src/util/casing.js","webpack:///./src/util/index.js"],"names":["Card","styled","div","theme","dark","border","radius","color","primary","white","light","propTypes","children","PropTypes","node","isRequired","elevate","bool","defaultProps","CardHeader","padding","normal","fgColor","string","bgColor","CardBodyContents","CardBody","style","image","CardFooter","left","center","right","black","Wrapper","TitleCardHeader","small","Title","TitleCardBody","topPadding","TitleCard","title","titleElement","useRef","useState","cardBodyTopPadding","setCardBodyTopPadding","windowWidth","useWindowWidth","useEffect","current","scrollHeight","ref","ResourceButtons","ResourceButton","Button","active","main","darkgrey","Resource","lightgrey","ResourceInfo","ResourceTitle","Heading","ResourceSource","ResourcesPage","resources","useResources","activeResourceType","setActiveResourceType","activeResourceTypeButton","setActiveResourceTypeButton","transitioning","setTransitioning","useLayoutEffect","setTimeout","handleChangeActiveResources","index","event","description","keywords","role","onClick","reduce","sum","resource","length","map","category","i","key","aria-controls","aria-selected","disabled","id","opacity","transform","transition","includes","name","kebabCase","aria-labelledby","source","to","url","module","exports","str","toLowerCase","replace"],"mappings":"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","file":"component---src-pages-resources-js-a1a82bae77329fa62100.js","sourcesContent":["import PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nexport const Card = styled.div(({ theme, dark }) => `\n    // & * { border: 1px solid #f99; }\n    border-radius: ${ theme.border.radius };\n    overflow: hidden;\n    margin-bottom: 3rem;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    background-color: ${ dark ? theme.color.primary.dark : theme.color.white };\n    color: ${ dark ? theme.color.white : theme.color.primary.dark };\n    opacity: ${ dark ? 0.75 : 1.0 };\n    transition: filter 250ms;\n    filter: drop-shadow(0 0 4px rgba(0, 0, 0, 0.1));\n    &:hover {\n        filter: drop-shadow(0 0 6px rgba(0, 0, 0, 0.2));\n    }\n    a, a:active, a:visited {\n        color: ${ theme.color.primary.light };\n        transition: filter 250ms, text-decoration-color 250ms;\n        text-decoration-color: ${ theme.color.primary.light };\n        text-underline-offset: 0.1em;\n    }\n    a:hover, a:active:hover, a:visited:hover {\n        filter: brightness(1.25);\n        text-decoration-color: ${ theme.color.primary.dark };\n        text-underline-offset: 0.1em;\n    }\n`)\n\nCard.propTypes = {\n    children: PropTypes.node.isRequired,\n    elevate: PropTypes.bool.isRequired,\n}\n\nCard.defaultProps = {\n    elevate: true,\n}","import PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nexport const CardHeader = styled.div(({ theme }) => `\n    display: flex;\n    // justify-content: center;\n    // align-items: center;\n    // text-align: left;\n    color: ${ theme.color.primary.dark };\n    background: linear-gradient(-30deg, ${ theme.color.primary.light }22 0%, ${ theme.color.white } 100%);\n    background-color: ${ theme.color.primary.light }11;\n    border-bottom: 1px solid ${ theme.color.primary.light }66;\n    font-weight: bold;\n    position: relative;\n    font-size: 200%;\n    min-height: 4rem;\n    padding: ${ theme.padding.normal };\n    // padding-bottom: 0;\n`)\n\nCardHeader.propTypes = {\n    fgColor: PropTypes.string.isRequired,\n    bgColor: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nCardHeader.defaultProps = {\n    fgColor: '#fff',\n    bgColor: 'var(--color-crimson)',\n    children: '',\n}\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst CardBodyContents = styled.div(({ theme }) => `\n    flex: 1;\n    padding: ${ theme.padding.normal };\n    background-color: inherit;\n`)\n\nCardBodyContents.propTypes = {\n    fgColor: PropTypes.string.isRequired,\n    bgColor: PropTypes.string.isRequired,\n}\n\nCardBodyContents.defaultProps = {\n    fgColor: 'inherit',\n    bgColor: '#fff',\n}\n\nexport const CardBody = ({ children, image, style }) => {\n    return (\n        <CardBodyContents style={ style }>\n            { children }\n        </CardBodyContents>\n    )\n}\n","import PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nexport const CardFooter = styled.div(({\n    theme,\n    left, center, right\n}) => `\n    display: flex;\n    justify-content: flex-start;\n    ${ center && 'justify-content: center' };\n    ${ right && 'justify-content: flex-end' };\n    align-items: center;\n    color: ${ theme.color.black };\n    background-color: inherit;\n    padding: ${ theme.padding.normal };\n    height: 4rem;\n`)\n\nCardFooter.propTypes = {\n    fgColor: PropTypes.string.isRequired,\n    bgColor: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nCardFooter.defaultProps = {\n    fgColor: '#fff',\n    bgColor: 'var(--color-crimson)',\n}\n\n","import React, { useEffect, useState, useRef } from 'react'\nimport styled from 'styled-components'\nimport { Card } from './card'\nimport { CardHeader } from './card-header'\nimport { CardBody } from './card-body'\nimport { Title } from '../typography'\nimport { useWindowWidth } from '../../hooks'\n\nconst Wrapper = styled.div`\n    position: relative;\n    margin-top: 5rem;\n`\n\nconst TitleCardHeader = styled.div(({ theme }) => `\n    display: flex;\n    border-radius: ${ theme.border.radius };\n    justfy-content: center;\n    align-items: center;\n    background-color: ${ theme.color.primary.dark };\n    filter: drop-shadow(0 8px 8px #00000033);\n    font-weight: bold;\n    position: relative;\n    min-height: 4rem;\n    padding: ${ theme.padding.small };\n    position: absolute;\n    left: 50%;\n    top: -3rem;\n    transform: translateX(-50%);\n    transition: min-width 250ms;\n    z-index: 1;\n    min-width: 50%;\n    @media (max-width: 798px) {\n        min-width: 90%;\n    }\n    ${ Title } {\n        color: ${ theme.color.white };\n        text-align: center;\n        width: 100%;\n        font-size: calc(12pt + 1vmin);\n        padding: 0;\n        margin: 0;\n    }\n`)\n\nconst TitleCardBody = styled.div(({ topPadding, theme }) => `\n    flex: 1;\n    padding: ${ theme.padding.normal };\n    padding-top: calc(3 * ${ topPadding }px / 4);\n    background-color: inherit;\n`)\n\nexport const TitleCard = ({ title, children }) => {\n    const titleElement = useRef()\n    const [cardBodyTopPadding, setCardBodyTopPadding] = useState(0)\n    const { windowWidth } = useWindowWidth()\n    \n    useEffect(() => {\n        setCardBodyTopPadding(titleElement.current.scrollHeight)\n    }, [titleElement.current, windowWidth])\n\n    return (\n        <Wrapper>\n            <TitleCardHeader ref={ titleElement }>\n                <Title>{ title }</Title>\n            </TitleCardHeader>\n            <Card>\n                <TitleCardBody topPadding={ cardBodyTopPadding }>\n                    { children }\n                </TitleCardBody>\n            </Card>\n        </Wrapper>\n    )\n}\n","import React, { useLayoutEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { PageContent } from '../components/layout'\nimport { SEO } from '../components/seo'\nimport { useResources } from '../hooks'\nimport { Title, Heading, Paragraph } from '../components/typography'\nimport { TitleCard, Card, CardHeader, CardBody } from '../components/card'\nimport { ExternalLinkButton } from '../components/link'\nimport { Button } from '../components/button'\nimport { kebabCase } from '../util'\n\nconst ResourceButtons = styled.div(({ theme }) => `\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding-bottom: ${ theme.padding.normal };\n`)\n\nconst ResourceButton = styled(Button)(({ theme, active = false}) => `\n    display: block;\n    padding: 0.5rem 1rem;\n    margin: 0.5rem;\n    border-radius: 4px;\n    ${ active ? `background-color: ${ theme.color.primary.main };` : `background-color: ${ theme.color.darkgrey };` }\n    @media (max-width: 798px) {\n        width: 100%;\n    }\n`)\n\nconst Resource = styled.div(({ theme }) => `\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    margin-bottom: 1rem;\n    padding-bottom: ${ theme.padding.normal };\n    &:not(:last-child) {\n        border-bottom: 1px solid ${ theme.color.lightgrey };\n    }\n    @media (max-width: 798px) {\n        flex-direction: column;\n    }\n`)\n\nconst ResourceInfo = styled.div(({ theme }) => `\n    flex: 1;\n    padding-right: ${ theme.padding.normal };\n`)\n\nconst ResourceTitle = styled(Heading)`\n    text-align: left;\n    @media (max-width: 798px) {\n        text-align: center;\n    }\n`\n\nconst ResourceSource = styled.div(({ theme }) => `\n    color: ${ theme.color.darkgrey };\n    @media (max-width: 798px) {\n        margin-bottom: ${ theme.padding.normal };\n    }\n`)\n\nconst ResourcesPage = () => {\n    const resources = useResources()\n    const [activeResourceType, setActiveResourceType] = useState(-1)\n    const [activeResourceTypeButton, setActiveResourceTypeButton] = useState(-1)\n    const [transitioning, setTransitioning] = useState(false)\n\n    useLayoutEffect(() => {\n        if (transitioning) {\n            setTimeout(() => setTransitioning(false), 250)\n        }\n    }, [transitioning])\n\n    const handleChangeActiveResources = index => event => {\n        setActiveResourceTypeButton(index)\n        setTransitioning(true)\n        setTimeout(() => setActiveResourceType(index), 250)\n    }\n\n    return (\n        <PageContent>\n            <SEO \n                title=\"COVID-19 Resources\"\n                description=\"\"\n                keywords=\"\"\n            />\n\n            <TitleCard title=\"COVID-19 Resources\">\n                <Paragraph>\n                    The resources listed below have proven to be of interest at RENCI as we discuss the progression of COVID-19 and and its impact on research and our society.\n                    We have collected them here in case they are interesting to others also, although we do not take credit for or endorse the information within these links in any way.\n                </Paragraph>\n            </TitleCard>\n            \n            <ResourceButtons role=\"tablist\">\n                <ResourceButton\n                    onClick={ handleChangeActiveResources(-1) }\n                    active={ activeResourceTypeButton === -1 }\n                >\n                    ALL ({ resources.reduce((sum, resource) => sum + resource.resources.length, 0) })\n                </ResourceButton>\n                {\n                    resources.map((category, i) => (\n                        <ResourceButton\n                            key={ `${ category.title }_button` }\n                            role=\"tab\"\n                            aria-controls={ `resources-${ i }` }\n                            aria-selected={ activeResourceTypeButton === i }\n                            onClick={ handleChangeActiveResources(i) }\n                            active={ activeResourceTypeButton === i }\n                            disabled={ activeResourceTypeButton === i }\n                        >\n                            { category.title } ({ category.resources.length })\n                        </ResourceButton>\n                    ))\n                }\n            </ResourceButtons>\n\n            <section id=\"resource-list\" style={{\n                opacity: transitioning ? 0 : 1,\n                transform: `translate3d(${ transitioning ? '0, 2rem, 0' : '0, 0, 0' })`,\n                transition: 'transform 250ms ease-out, opacity 250ms',\n            }}>\n                {\n                    resources.map(({ title, resources }, i) => [-1, i].includes(activeResourceType) && (\n                        <Card key={ title } name={ kebabCase(title) } role=\"tabpanel\" aria-labelledby={ `resources-${ i }` }>\n                            <CardHeader>{ title }</CardHeader>\n                            <CardBody>\n                                    {\n                                        resources.map(resource => (\n                                            <Resource key={ resource.title }>\n                                                <ResourceInfo>\n                                                    <ResourceTitle>{ resource.title }</ResourceTitle>\n                                                    <ResourceSource>Source: { resource.source || '-' }</ResourceSource>\n                                                </ResourceInfo>\n                                                <ExternalLinkButton to={ resource.url }>View</ExternalLinkButton>\n                                            </Resource>\n                                        ))\n                                    }\n                            </CardBody>\n                        </Card>\n                    ))\n                }\n            </section>\n        </PageContent>\n    )\n}\n\nexport default ResourcesPage\n","module.exports = {\n    kebabCase: str => str.toLowerCase().replace(/ +/g, '-')\n}\n","export * from './casing'\n"],"sourceRoot":""}